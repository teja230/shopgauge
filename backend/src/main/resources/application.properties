spring.application.name=storesight-backend
# PostgreSQL
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/storesight}
spring.datasource.username=${DB_USER:storesight}
spring.datasource.password=${DB_PASS:storesight}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool Configuration - Enterprise Grade
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=120000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.pool-name=StoresightHikariCP

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
# Redis
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
# Flyway
spring.flyway.enabled=true
spring.flyway.clean-disabled=false
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
# SendGrid
sendgrid.api-key=${SENDGRID_API_KEY:dummy_sendgrid_key}
# Twilio
twilio.account_sid=${TWILIO_ACCOUNT_SID:dummy_twilio_sid}
twilio.auth_token=${TWILIO_AUTH_TOKEN:dummy_twilio_token}
twilio.from_number=${TWILIO_FROM_NUMBER:+1234567890}
# Shopify
shopify.api.key=${SHOPIFY_API_KEY:}
shopify.api.secret=${SHOPIFY_API_SECRET:}
shopify.api.version=${SHOPIFY_API_VERSION:2023-10}
shopify.admin.base-url=${SHOPIFY_ADMIN_BASE_URL:https://{shop}.myshopify.com/admin}
shopify.scopes=read_products,read_orders,read_customers,read_inventory
shopify.redirect_uri=${SHOPIFY_REDIRECT_URI:https://api.shopgaugeai.com/api/auth/shopify/callback}
# Frontend URL for redirects after authentication
frontend.url=${FRONTEND_URL:http://localhost:5173}
# Logging
logging.level.org.springframework=INFO
logging.level.com.storesight=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Server
server.port=${SERVER_PORT:8080}
# Backend URL Configuration
backend.url=${BACKEND_URL:http://localhost:8080}
# Competitor Discovery
discovery.serpapi.key=${SERPAPI_KEY:dummy_serpapi_key}
discovery.serpapi.base-url=${SERPAPI_BASE_URL:https://serpapi.com/search.json}
discovery.serpapi.max-results=${SERPAPI_MAX_RESULTS:3}

# Scrapingdog API (Primary - Most Cost-Effective)
discovery.scrapingdog.key=${SCRAPINGDOG_KEY:dummy_scrapingdog_key}
discovery.scrapingdog.base-url=${SCRAPINGDOG_BASE_URL:https://api.scrapingdog.com/google}
discovery.scrapingdog.max-results=${SCRAPINGDOG_MAX_RESULTS:10}

# Serper API (Secondary - Fast Fallback)
discovery.serper.key=${SERPER_KEY:dummy_serper_key}
discovery.serper.base-url=${SERPER_BASE_URL:https://google.serper.dev/search}
discovery.serper.max-results=${SERPER_MAX_RESULTS:10}

# Multi-Source Settings
discovery.multi-source.enabled=${DISCOVERY_MULTI_SOURCE_ENABLED:true}
discovery.multi-source.fallback-enabled=${DISCOVERY_FALLBACK_ENABLED:true}
discovery.multi-source.max-providers=${DISCOVERY_MAX_PROVIDERS:3}

# Legacy settings (still supported)
discovery.provider=${DISCOVERY_PROVIDER:multi-source}
discovery.enabled=${DISCOVERY_ENABLED:true}
discovery.interval.hours=${DISCOVERY_INTERVAL_HOURS:24}
discovery.max.results=${DISCOVERY_MAX_RESULTS:10}

# Caching Configuration - Extended cache times for cost optimization
spring.cache.cache-names=searchResults,suggestionCounts
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=120m

# Redis secret: serpapi.api.key
# --- Spring Session configuration ---
spring.session.store-type=redis
spring.session.timeout=60m
spring.session.redis.namespace=storesight:sessions
spring.session.redis.flush-mode=on-save
# Use default Redis repository type instead of indexed to avoid keyspace notifications
spring.session.redis.repository-type=default
spring.data.redis.default-type=json
# Disable Redis repository scanning since we only use JPA repositories
spring.data.redis.repositories.enabled=false
# Notification Cleanup Policy Configuration
notifications.cleanup.enabled=true
notifications.cleanup.retention-days=30
notifications.cleanup.batch-size=100
notifications.cleanup.max-read-notifications=50
notifications.cleanup.max-unread-notifications=100

# Monitoring and Alerting Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.redis.enabled=true
management.health.diskspace.enabled=true

# Metrics Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=${spring.profiles.active:dev}

# Database Monitoring
management.metrics.jdbc.instrument=true
management.metrics.hikaricp.enabled=true

# Custom Health Indicators
management.health.defaults.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
